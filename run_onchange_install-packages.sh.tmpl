{{ if eq .chezmoi.os "linux" -}}

#!/bin/bash

read -r -p "Would you like to install the dotfiles specified packages with linux? [y/N] " response
response=${response,,}    # tolower
if [[ "$response" =~ ^(yes|y)$ ]]
then
    echo "Installing applications for linux; note needs sudo"

    echo "Installing pyenv"
    sudo apt install make build-essential libssl-dev zlib1g-dev \
    libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev \
    libncursesw5-dev xz-utils tk-dev libffi-dev liblzma-dev python-openssl
    curl -L https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer | bash

    echo "Installing other cli applications"
    sudo apt install trash-cli nodejs xclip fzf neovim

    echo "Installing javascript features"
    echo "Install nvm"
    curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash

    # temporarily put on path
    export NVM_DIR="$HOME/.nvm"
    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm

    echo "Install node and npm using nvm"
    nvm install stable --reinstall-packages-from=current

    echo "Installing yarn using npm"
    # sudo?
    # npm install -g npm@latest
    npm install -g corepack
    corepack enable
    corepack prepare yarn@stable --activate
else
    echo "Skipping package installation script"
fi

{{ else if eq .chezmoi.os "darwin" -}}

#!/bin/sh

read -r -p "Would you like to install the dotfiles specified packages with macos? [y/N] " response
if [[ "$response" =~ ^([yY][eE][sS]|[yY])$ ]]
then
    echo "Installing applications for macos; note needs homebrew"

    echo "Updating home brew"
    brew update

    echo "Installing pyenv"
    brew install pyenv

    echo "Installing other applications"
    brew install trash-cli node xclip reattach-to-user-namespace
    brew install --cask macvim

    echo "Installing ncurses for tmux"
    /usr/bin/tic -xe tmux-256color ~/.tmux-256color.info

    echo "Installing javascript features"
    echo "Install nvm"
    curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash

    # temporarily put on path
    export NVM_DIR="$HOME/.nvm"
    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm

    echo "Install node and npm using nvm"
    nvm install stable --reinstall-packages-from=current

    echo "Installing yarn using npm"
    # sudo?
    # npm install -g npm@latest
    npm install -g corepack
    corepack enable
    corepack prepare yarn@stable --activate

else
    echo "Skipping package installation script"
fi

{{ end -}}
